第10回課題
使用機器:自分のwindowsPC
python環境:vscode
バージョン:3


----実行結果----
jacobi: 2151 / gauss_seidel: 1259 / sor: 112

----説明----
以下にコードの説明を示す。

LaplaceSolver クラス:
__init__(self, Lx, Ly, Nx, Ny, omega=1.9): クラスの初期化メソッドで、解の領域サイズや反復法におけるパラメータを設定する。

initialize_phi(self): 初期条件を設定し、領域全体における初期のphiを生成する。このコードでは、四辺の境界条件が指定されている。

laplace_jacobi(self, phi, max_iter=10000, tolerance=1e-5): Jacobi法によるラプラス方程式の数値解法を実装している。指定された反復回数または収束条件が達成されるまで反復する。

laplace_gauss_seidel(self, phi, max_iter=10000, tolerance=1e-5): Gauss-Seidel法による数値解法を実装している。Jacobi法と同様に、指定された反復回数または収束条件が達成されるまで反復するが、新しい値を計算する際に直前の計算結果を使用する。

laplace_sor(self, phi, max_iter=10000, tolerance=1e-5): SOR法（逐次超過緩和法）による数値解法を実装している。SOR法はGauss-Seidel法を改良したもので、反復中に適用される緩和係数 omega が追加されている。

plot_solution(self, method, phi, title): 3Dプロットを作成し、数値解を可視化するためのメソッドである。Matplotlibのplot_surfaceメソッドを使用している。

main() 関数:
main(): LaplaceSolverクラスのインスタンスを作成し、各反復法を用いてラプラス方程式を解き、結果を表示・可視化するためのメイン関数。
これにより、領域内のラプラス方程式を数値的に解き、異なる反復法を用いた結果を比較することが可能である。解の初期条件や反復法のパラメータは変更可能で、異なる設定での数値解が得られる。

----考察----
結果を見てみるとヤコビ法が2151回、ガウスザイデル法が1259回、SOR法が112回と、SOR法が一番収束が速いことがわかる。
以下に考えられる要素を挙げる
1:SOR法は、Gauss-Seidel法に比べて反復の収束を促進するために加速度と発散を調整することができる。
パラメータ omega（オメガ）は緩和係数と呼ばれ、適切に調整されると収束が速くなるので、SOR法が最も早く収束したのだと考えられる。
通常、最適な omega の値は1より大きく、過剰に大きいと収束が失敗する可能性があるが、適切に選択されると効果的に収束を加速できると考えられる。

2:次数の低減： SOR法は、直前の反復の計算結果を次の反復で再利用する。このため、情報を次の反復に素早く伝播させることができ、収束が向上する。
Gauss-Seidel法は直前の反復で計算された値を使用するが、SOR法ではその値を使って次の反復の値を予測し、それを新たな計算に用いる。
これらにより、SOR法の収束が速いと考えられる。
