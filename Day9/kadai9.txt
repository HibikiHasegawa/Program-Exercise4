第9回課題
使用機器:自分のwindowsPC
python環境:vscode
バージョン:3


----実行結果----
グラフの通り

----説明----
このプログラムは、与えられた微分方程式を3つの異なる解法(４次のルンゲ=クッタ法、オイラー法、２次のルンゲ=クッタ法)で解いた結果をグラフに表示するプログラムである。

それぞれの数値解法に対応する関数は以下の通りである。

runge_kutta_4th_order: 4次のルンゲクッタ法を用いて微分方程式を解く。
euler: オイラー法を用いて微分方程式を解く。
runge_kutta_2nd_order: 2次のルンゲクッタ法を用いて微分方程式を解く。
以下、詳しく解説していく。
runge_kutta_4th_order 関数
a: 解の範囲の下限
b: 解の範囲の上限
N: 分割数
この関数は、4次のルンゲクッタ法を用いて微分方程式を解き、結果をグラフで表示する。解の範囲は 
[a,b] であり、分割数は N である。プログラム内で具体的な計算手順とグラフの描画が行われている。

euler 関数
a: 解の範囲の下限
b: 解の範囲の上限
delta_x: 刻み幅
この関数は、オイラー法を用いて微分方程式を解き、結果をグラフで表示する。解の範囲は 
[a,b] であり、刻み幅は delta_x である。オイラー法の計算手順とグラフの描画が行われている。

runge_kutta_2nd_order 関数
a: 解の範囲の下限
b: 解の範囲の上限
delta_x: 刻み幅
この関数は、2次のルンゲクッタ法を用いて微分方程式を解き、結果をグラフで表示する。解の範囲は 
[a,b] であり、刻み幅は delta_x である。2次のルンゲクッタ法の計算手順とグラフの描画が行われている。

main ブロック
プログラムのメイン部分で、各関数を呼び出して実行し、それぞれの数値解法における 
x と y(x) の値を計算してグラフで表示している。それぞれの数値解法に対応する線が描かれ、比較が可能。


----考察----
4次のルンゲクッタ法:
4次のルンゲクッタ法は高精度な数値解法の一つであり、微小な刻み幅において安定していることが期待される。
このため、計算された数値解は信頼性が高いと考えられる。
オイラー法:
オイラー法は単純な数値解法であり、精度はあまり高くないと考えられる。
特に厳密な条件がない限り、数値解が真の解と一致しないことがある。計算された数値解は、比較的単純な形状を持つ可能性がある。
2次のルンゲクッタ法:
2次のルンゲクッタ法は、オイラー法よりも精度が向上しているが、4次のルンゲクッタ法ほど高い精度はないと考えられる。
計算された数値解は、中程度の精度であると思われる。

比較的単純な微分方程式であるため、オイラー法や2次のルンゲクッタ法でも一定の範囲で有効な数値解が得られているのだと考えられる。
しかし、解の正確性や計算の安定性を求める場合は、特に厳密な条件や高い精度が必要な場合は、4次のルンゲクッタ法などの高次の数値解法を使用することが望ましいだろう。