第6回課題
使用機器:自分のwindowsPC
python環境:vscode
バージョン:3


----実行結果----
ヤコビ法の解: [1.00000096 1.99999824 2.99999956 3.99999768]
ヤコビ法の収束過程:
Iteration 1: [2.22222222 2.         1.14285714 2.83333333]
Iteration 2: [1.33597884 1.37599206 2.84126984 3.17724868]
Iteration 3: [1.24772193 1.97916667 2.63463719 3.78709215]
Iteration 4: [1.06888193 1.8733423  2.96860565 3.83345319]
Iteration 5: [1.05013962 1.99574928 2.92606756 3.95694528]
Iteration 6: [1.01394318 1.97436382 2.99364696 3.9662908 ]
Iteration 7: [1.01014829 1.9991396  2.98503606 3.99128576]
Iteration 8: [1.00282211 1.99481122 2.99871414 3.99317724]
Iteration 9: [1.00205402 1.99982585 2.99697129 3.99823623]
Iteration 10: [1.0005712  1.99894979 2.99973974 3.99861907]
Iteration 11: [1.00041573 1.99996475 2.99938699 3.99964301]
Iteration 12: [1.00011561 1.99978744 2.99994732 3.9997205 ]
Iteration 13: [1.00008414 1.99999287 2.99987593 3.99992775]
Iteration 14: [1.0000234  1.99995698 2.99998934 3.99994343]
Iteration 15: [1.00001703 1.99999856 2.99997489 3.99998538]
Iteration 16: [1.00000474 1.99999129 2.99999784 3.99998855]
Iteration 17: [1.00000345 1.99999971 2.99999492 3.99999704]
Iteration 18: [1.00000096 1.99999824 2.99999956 3.99999768]
Iteration 19: [1.0000007  1.99999994 2.99999897 3.9999994 ]
ガウス・ザイデル法の解: [1.00000119 1.9999993  2.99999934 3.99999947]
ガウス・ザイデル法の収束過程:
Iteration 1: [2.22222222 1.44444444 1.87301587 3.32804233]
Iteration 2: [1.32333921 1.72141387 2.77460737 3.82454823]
Iteration 3: [1.10644629 1.93897174 2.94764089 3.95463454]
Iteration 4: [1.02442012 1.98647588 2.98666299 3.98923029]
Iteration 5: [1.00568389 1.99659099 2.99676092 3.99740482]
Iteration 6: [1.00140581 1.99916318 2.99922026 3.99936631]
Iteration 7: [1.00034301 1.99979852 2.99981038 3.99984605]
Iteration 8: [1.00008295 1.9999511  2.99995389 3.99996266]
Iteration 9: [1.00002014 1.99998811 2.99998881 3.99999093]
Iteration 10: [1.00000489 1.99999711 2.99999728 3.9999978 ]
Iteration 11: [1.00000119 1.9999993  2.99999934 3.99999947]
----説明----
今回は、ヤコビ法とガウス・ザイデル法を使用して与えられた連立方程式を解くためのPythonコードを作った。
以下の手順で方程式を解いている。
1.連立方程式の係数行列 A と右辺ベクトル b が定義されている。
2.初期推定値 x0 はゼロベクトルとして設定されている。
3.jacobi 関数はヤコビ法を実装し、与えられた係数行列と右辺ベクトルに対して解を計算する。
4.gauss_seidel 関数はガウス・ザイデル法を実装し、同様に解を計算する。
5.ヤコビ法とガウス・ザイデル法を使用して得られた解がそれぞれ x_jacobi と x_gauss_seidel に格納され、それらを出力している。
また、収束性を見るためにステップごとの組み合わせを見れるようにしている。
ヤコビ法の概要は以下の通り。
1.まず、初期の推定解（ベクトル）を設定する。通常、この初期解はゼロベクトルから始める。
2.連立方程式の各方程式について、現在の解ベクトルを使用して未知の変数を計算する。具体的には、各方程式において、未知の変数を左辺に残し、既知の変数と現在の解から計算する。
3.新しい解ベクトルが得られたら、それを現在の解として更新し、再びステップ2を繰り返す。
4.一定の収束条件が満たされるか、あるいは一定回数の反復を実行するまで、ステップ2と3を続ける。

ガウスザイデル法の概要は以下の通り。

1.まず、初期の推定解（ベクトル）を設定する。通常、この初期解はゼロベクトルから始める。
2.連立方程式の各方程式について、現在の解ベクトルを使用して未知の変数を計算する。具体的には、各方程式において、未知の変数を左辺に残し、既知の変数と現在の解から計算する。ただし、ガウス・ザイデル法では、他の未知の変数も同時に更新する。つまり、新しい解ベクトルの中で、1つの変数を計算するたびに、それを次の計算に使う。
3.新しい解ベクトルが得られたら、それを現在の解として更新し、再びステップ2を繰り返す。
4.一定の収束条件が満たされるか、あるいは一定回数の反復を実行するまで、ステップ2と3を続ける。

----考察----
与えられた結果から言えることは、ヤコビ法とガウス・ザイデル法の両方が、与えられた連立方程式において収束して正しい解に収束していること、
またガウスザイデル法のほうが早く解が収束していることがわかる。

具体的な点については、以下のことが言えます:

ヤコビ法とガウス・ザイデル法は、初期推定値から始まり、反復ごとに解が更新される。
反復が進むにつれて、解は真の解に収束している。
ヤコビ法は通常、収束により多くの反復が必要だが、反復ごとに解が滑らかに変化する。
ガウス・ザイデル法は比較的迅速に収束し、初期のステップで急激な変化が見られるが、収束プロセスが進行するにつれて滑らかになっている。
ヤコビ法とガウス・ザイデル法の収束速度は問題に依存するが、一般的には、ガウス・ザイデル法がヤコビ法よりも収束が速いことが多いと言われている。
ガウス・ザイデル法は各反復ステップでより多くの情報を利用して解を更新するため、収束までの反復回数が少なくて済むと考えられる。。