第10回課題
使用機器:自分のwindowsPC
python環境:vscode
バージョン:3


----実行結果----
gifの通り

----説明----
このコードは、与えられた1次元熱伝導方程式をCrank-Nicolson法で解くプログラムである。

set_initial_condition: 初期条件を設定する関数。境界以外の U 値を全て0.0に設定する。

set_boundary_condition: 境界条件を設定する関数。x=0 上の境界条件を設定し、境界点の U 値を0.0にする。

calculate_crank_nicolson: Crank-Nicolson法を使用して差分方程式を計算する関数。差分方程式の数値解を返す。

animate_time_evolution: 計算された数値解をアニメーションで表示する関数。matplotlib を使用してアニメーションを作成し、animation.gif として保存。

output_result_file: 計算結果をテキストファイルに保存する関数。calculated_result.txt ファイルに計算結果と計算パラメータが保存される。

validate_parameters: パラメータの妥当性をチェックする関数。R が0.5より大きい場合は例外を発生させる。

__main__ ブロック: プログラムの実行部分。格子点の数、刻み幅、温度伝導率などのパラメータを設定し、上記の関数を呼び出して計算とアニメーションを行う。

https://labo-code.com/python/parabolic_equation/
を参考に作成しました。
----考察----
前進差分(陽解法)は、現在の時刻の値を、未来の時刻の値から計算する手法である。
つまり、未知数が未来の時刻での値に対して陽に表現される。
一方、後退差分(陰解法)は、未来の時刻の値を、現在の時刻の値から計算する手法である。
未知数が未来の時刻での値に対して陰に表現される。
これらの手法の選択は、解くべき偏微分方程式やその特性によって異なる。
前進差分法は安定性が制約されるため、計算ステップを小さくする必要がある反面、
後退差分法は安定性が比較的緩やかであるため、大きな計算ステップで安定した結果が得られることがあると考えられる。
また、Crank-Nicolson法（クランク・ニコルソン法）は、偏微分方程式（特に拡散方程式など）を数値的に解くための差分法の一種であり、
この手法は、前進差分（陽解法）と後退差分（陰解法）の両方を組み合わせた陰陽法（半陰陽法と言われている。
特に、時間方向と空間方向の差分を組み合わせ、数値解を安定的かつ効果的に求めることができる特長がある。